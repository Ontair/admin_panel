version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --entrypoints.web.address=:80
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
    ports:
      - "80:80"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
    networks:
      - admin-panel

  backend:
    build: .
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=PathPrefix(`/`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolallowmethods=GET,POST,PUT,DELETE,OPTIONS"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolallowheaders=Origin,Content-Type,Accept,Authorization,Cookie"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolallowcredentials=true"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolalloworiginlist=http://localhost:5174"
      - "traefik.http.routers.backend.middlewares=cors-headers"
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=password
      - DATABASE_NAME=admin_panel
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - admin-panel

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: admin_panel
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - admin-panel
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  admin-panel:
    driver: bridge
